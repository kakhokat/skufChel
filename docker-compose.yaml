version: '3.4'

services:
  courses:
    ports:
      - 8082:8080
    build: ./Backend/Courses
    container_name: coursesBack
    restart: unless-stopped
    depends_on:
      - postgres
      - kafka
    environment:
      - DB_HOSTNAME=postgres
      - DB_PORT=5432
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - DB_DATABASE=root
      - DB_SSLMODE=disable
      - KAFKA_HOSTNAME=kafka
      - KAFKA_PORT=9092
      - KAFKA_TOPIC=topic
      - KAFKA_PARTITION=0

  notification:
    build: ./Backend/Notification
    container_name: notificationsBack
    restart: unless-stopped
    depends_on:
      - postgresNotification
      - kafka
    environment:
      - KAFKA_HOSTNAME=kafka
      - KAFKA_PORT=9092
      - KAFKA_TOPIC=topic
      - KAFKA_PARTITION=0
      - DB_HOSTNAME=postgresNotification
      - DB_PORT=5432
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - DB_DATABASE=root
      - DB_SSLMODE=disable

  proxy:
    build: ./Backend/Proxy
    container_name: proxyBack
    restart: unless-stopped
    depends_on:
      - postgresNotification
      - kafka
      - postgres
      - courses
      - notification
    ports:
      - 8080:8080
    environment:
      - NOTIFICATION_SERVICE_URL=http://notificationsBack:8080
      - COURSES_SERVICE_URL=http://coursesBack:8080

  postgres:
    image: "postgres:latest"
    container_name: "postgres"
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=root
    restart: unless-stopped

  kafka:
    image: "bitnami/kafka:latest"
    container_name: "kafka"
    ports:
      - 9092:9092
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper
    restart: unless-stopped

  zookeeper:
    image: "bitnami/zookeeper:latest"
    container_name: "zookeeper"
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    restart: unless-stopped

  postgresNotification:
    image: "postgres:latest"
    container_name: "postgresNotification"
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=root
    restart: unless-stopped

